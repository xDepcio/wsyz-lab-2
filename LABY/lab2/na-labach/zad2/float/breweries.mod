set BREWERIES;
set WHOLESALERS;

param BREWERY_CAPABILITIES{BREWERIES};
param WHOLESALER_REQUIREMENTS{WHOLESALERS};
param TRANSPORT_COST{BREWERIES, WHOLESALERS};

var BEER_TRANSPORTED{BREWERIES, WHOLESALERS} >= 0;

minimize TOTAL_COST:
    sum{(b, w) in BREWERIES cross WHOLESALERS} TRANSPORT_COST[b, w] * BEER_TRANSPORTED[b, w];

subject to BREWERY_CAPABILITIES_CONSTRAINT{b in BREWERIES}:
    sum{w in WHOLESALERS} BEER_TRANSPORTED[b, w] <= BREWERY_CAPABILITIES[b];

subject to SATISFY_WHOLESALER_REQUIREMENTS{w in WHOLESALERS}:
    sum{b in BREWERIES} BEER_TRANSPORTED[b, w] >= WHOLESALER_REQUIREMENTS[w];
